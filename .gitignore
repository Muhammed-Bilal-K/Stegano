.env
node_modules


app.post('/login', checkNotAuthenticated, passport.authenticate("local", {
    successRedirect: "/",
    failureRedirect: "/login",
    failureFlash: true,
})
);






initializePassport(
    passport,
    email => users.findOne(user => user.email === email),
    id => users.findOne(user => user.id === id)
)



const initialize = (passport, getUserByEmail , getUserById) => {
    // function to authentication
    const authenticateUsers = async (email, password, done) => {
        //get users by email
        const user = getUserByEmail(email)
        if (user == null) {
            return done(null, false, { message: " No user found with that email" })
        }
        try {
            if (await bcrypt.compare(password, user.password)) {
                return done(null, user)
            }else{
                return done(null, false, { message: " Password incorrect" })
            }
        } catch (e) {
            console.log(e);
            return done(e)
        }
    }

    passport.use(new LocalStrategy({ usernameField: 'email' }, ))
    passport.serializeUser((user, done) => done(null, user.id))
    passport.deserializeUser((id, done) => {
        return done(null, getUserById(id))
    })
}

module.exports = initialize